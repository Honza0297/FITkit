/****************************************************************************
** Meta object code from reading C++ file 'fktreewidget.h'
**
** Created by: The Qt Meta Object Compiler version 63 (Qt 4.8.7)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "fktreewidget.h"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'fktreewidget.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_FkTreeWidget[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
      38,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: signature, parameters, type, tag, flags
      14,   13,   13,   13, 0x05,

 // slots: signature, parameters, type, tag, flags
      32,   24,   13,   13, 0x0a,
      57,   13,   13,   13, 0x2a,
      65,   13,   13,   13, 0x0a,
      76,   13,   13,   13, 0x0a,
      88,   13,   13,   13, 0x0a,
     103,   97,   13,   13, 0x0a,
     122,   13,   13,   13, 0x2a,
     138,   13,   13,   13, 0x0a,
     151,   13,   13,   13, 0x0a,
     173,  169,  164,   13, 0x0a,
     196,  169,  164,   13, 0x0a,
     237,  224,   13,   13, 0x0a,
     269,  262,   13,   13, 0x2a,
     286,   13,   13,   13, 0x0a,
     296,   13,   13,   13, 0x0a,
     310,   13,   13,   13, 0x0a,
     347,  337,  325,   13, 0x0a,
     359,   13,  325,   13, 0x2a,
     367,   13,  325,   13, 0x0a,
     377,  337,  325,   13, 0x0a,
     395,   13,  325,   13, 0x2a,
     423,  409,  325,   13, 0x0a,
     463,  459,   13,   13, 0x0a,
     489,  459,   13,   13, 0x0a,
     514,  169,  164,   13, 0x0a,
     535,   13,  164,   13, 0x2a,
     569,  549,  164,   13, 0x0a,
     604,  594,  164,   13, 0x2a,
     630,  624,  164,   13, 0x2a,
     642,   13,  164,   13, 0x2a,
     659,  650,   13,   13, 0x09,
     692,   13,   13,   13, 0x09,
     703,   13,   13,   13, 0x09,
     711,   13,   13,   13, 0x09,
     730,  728,   13,   13, 0x09,
     755,  750,   13,   13, 0x09,
     791,  787,   13,   13, 0x09,

       0        // eod
};

static const char qt_meta_stringdata_FkTreeWidget[] = {
    "FkTreeWidget\0\0updated()\0options\0"
    "clean(App::CleanOptions)\0clean()\0"
    "cleanMcu()\0cleanFpga()\0rescan()\0msecs\0"
    "triggerUpdate(int)\0triggerUpdate()\0"
    "showReadme()\0showRstDoc()\0bool\0app\0"
    "setCurrentApp(QString)\0"
    "setCurrentApp(FCMake::App*)\0target,title\0"
    "runMake(QString,QString)\0target\0"
    "runMake(QString)\0runISIM()\0runModelSIM()\0"
    "runXilinxIse()\0ProcessJob*\0showModal\0"
    "build(bool)\0build()\0buildfg()\0"
    "remoteBuild(bool)\0remoteBuild()\0"
    "app,showModal\0startRemoteBuild(FCMake::App*,bool)\0"
    "job\0buildFinished(JobWidget*)\0"
    "makeFinished(JobWidget*)\0flashForced(QString)\0"
    "flashForced()\0force,app,rebuilded\0"
    "flash(bool,QString,bool)\0force,app\0"
    "flash(bool,QString)\0force\0flash(bool)\0"
    "flash()\0item,col\0itemExpand(QTreeWidgetItem*,int)\0"
    "populate()\0clear()\0updateTreeMenu()\0"
    "a\0menuHover(QAction*)\0item\0"
    "updateCurrent(QTreeWidgetItem*)\0pos\0"
    "contextMenuRequest(QPoint)\0"
};

void FkTreeWidget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        FkTreeWidget *_t = static_cast<FkTreeWidget *>(_o);
        switch (_id) {
        case 0: _t->updated(); break;
        case 1: _t->clean((*reinterpret_cast< App::CleanOptions(*)>(_a[1]))); break;
        case 2: _t->clean(); break;
        case 3: _t->cleanMcu(); break;
        case 4: _t->cleanFpga(); break;
        case 5: _t->rescan(); break;
        case 6: _t->triggerUpdate((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 7: _t->triggerUpdate(); break;
        case 8: _t->showReadme(); break;
        case 9: _t->showRstDoc(); break;
        case 10: { bool _r = _t->setCurrentApp((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 11: { bool _r = _t->setCurrentApp((*reinterpret_cast< FCMake::App*(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 12: _t->runMake((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2]))); break;
        case 13: _t->runMake((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 14: _t->runISIM(); break;
        case 15: _t->runModelSIM(); break;
        case 16: _t->runXilinxIse(); break;
        case 17: { ProcessJob* _r = _t->build((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< ProcessJob**>(_a[0]) = _r; }  break;
        case 18: { ProcessJob* _r = _t->build();
            if (_a[0]) *reinterpret_cast< ProcessJob**>(_a[0]) = _r; }  break;
        case 19: { ProcessJob* _r = _t->buildfg();
            if (_a[0]) *reinterpret_cast< ProcessJob**>(_a[0]) = _r; }  break;
        case 20: { ProcessJob* _r = _t->remoteBuild((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< ProcessJob**>(_a[0]) = _r; }  break;
        case 21: { ProcessJob* _r = _t->remoteBuild();
            if (_a[0]) *reinterpret_cast< ProcessJob**>(_a[0]) = _r; }  break;
        case 22: { ProcessJob* _r = _t->startRemoteBuild((*reinterpret_cast< FCMake::App*(*)>(_a[1])),(*reinterpret_cast< bool(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< ProcessJob**>(_a[0]) = _r; }  break;
        case 23: _t->buildFinished((*reinterpret_cast< JobWidget*(*)>(_a[1]))); break;
        case 24: _t->makeFinished((*reinterpret_cast< JobWidget*(*)>(_a[1]))); break;
        case 25: { bool _r = _t->flashForced((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 26: { bool _r = _t->flashForced();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 27: { bool _r = _t->flash((*reinterpret_cast< bool(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])),(*reinterpret_cast< bool(*)>(_a[3])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 28: { bool _r = _t->flash((*reinterpret_cast< bool(*)>(_a[1])),(*reinterpret_cast< const QString(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 29: { bool _r = _t->flash((*reinterpret_cast< bool(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 30: { bool _r = _t->flash();
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = _r; }  break;
        case 31: _t->itemExpand((*reinterpret_cast< QTreeWidgetItem*(*)>(_a[1])),(*reinterpret_cast< int(*)>(_a[2]))); break;
        case 32: _t->populate(); break;
        case 33: _t->clear(); break;
        case 34: _t->updateTreeMenu(); break;
        case 35: _t->menuHover((*reinterpret_cast< QAction*(*)>(_a[1]))); break;
        case 36: _t->updateCurrent((*reinterpret_cast< QTreeWidgetItem*(*)>(_a[1]))); break;
        case 37: _t->contextMenuRequest((*reinterpret_cast< const QPoint(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData FkTreeWidget::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject FkTreeWidget::staticMetaObject = {
    { &QWidget::staticMetaObject, qt_meta_stringdata_FkTreeWidget,
      qt_meta_data_FkTreeWidget, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &FkTreeWidget::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *FkTreeWidget::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *FkTreeWidget::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_FkTreeWidget))
        return static_cast<void*>(const_cast< FkTreeWidget*>(this));
    if (!strcmp(_clname, "Component"))
        return static_cast< Component*>(const_cast< FkTreeWidget*>(this));
    return QWidget::qt_metacast(_clname);
}

int FkTreeWidget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QWidget::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 38)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 38;
    }
    return _id;
}

// SIGNAL 0
void FkTreeWidget::updated()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}
QT_END_MOC_NAMESPACE
