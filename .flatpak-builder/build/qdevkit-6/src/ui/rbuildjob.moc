/****************************************************************************
** Meta object code from reading C++ file 'rbuildjob.h'
**
** Created by: The Qt Meta Object Compiler version 63 (Qt 4.8.7)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "rbuildjob.h"
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'rbuildjob.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 63
#error "This file was generated using the moc from 4.8.7. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
static const uint qt_meta_data_RBuildJob[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       9,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: signature, parameters, type, tag, flags
      11,   10,   10,   10, 0x05,

 // slots: signature, parameters, type, tag, flags
      22,   10,   10,   10, 0x0a,
      34,   10,   10,   10, 0x09,
      40,   10,   10,   10, 0x09,
      55,   49,   10,   10, 0x09,
      75,   10,   10,   10, 0x09,

 // methods: signature, parameters, type, tag, flags
      99,   86,   10,   10, 0x02,
     139,  131,   10,   10, 0x22,
     163,  159,   10,   10, 0x02,

       0        // eod
};

static const char qt_meta_stringdata_RBuildJob[] = {
    "RBuildJob\0\0finished()\0terminate()\0"
    "run()\0finish()\0state\0dialogFinished(int)\0"
    "readData()\0command,args\0"
    "setCommand(QString,QStringList)\0command\0"
    "setCommand(QString)\0app\0setTask(FCMake::App*)\0"
};

void RBuildJob::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        RBuildJob *_t = static_cast<RBuildJob *>(_o);
        switch (_id) {
        case 0: _t->finished(); break;
        case 1: _t->terminate(); break;
        case 2: _t->run(); break;
        case 3: _t->finish(); break;
        case 4: _t->dialogFinished((*reinterpret_cast< int(*)>(_a[1]))); break;
        case 5: _t->readData(); break;
        case 6: _t->setCommand((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< QStringList(*)>(_a[2]))); break;
        case 7: _t->setCommand((*reinterpret_cast< const QString(*)>(_a[1]))); break;
        case 8: _t->setTask((*reinterpret_cast< FCMake::App*(*)>(_a[1]))); break;
        default: ;
        }
    }
}

const QMetaObjectExtraData RBuildJob::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject RBuildJob::staticMetaObject = {
    { &ProcessJob::staticMetaObject, qt_meta_stringdata_RBuildJob,
      qt_meta_data_RBuildJob, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &RBuildJob::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *RBuildJob::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *RBuildJob::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_RBuildJob))
        return static_cast<void*>(const_cast< RBuildJob*>(this));
    return ProcessJob::qt_metacast(_clname);
}

int RBuildJob::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = ProcessJob::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 9)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 9;
    }
    return _id;
}

// SIGNAL 0
void RBuildJob::finished()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}
static const uint qt_meta_data_RBThread[] = {

 // content:
       6,       // revision
       0,       // classname
       0,    0, // classinfo
       2,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       1,       // signalCount

 // signals: signature, parameters, type, tag, flags
      10,    9,    9,    9, 0x05,

 // slots: signature, parameters, type, tag, flags
      22,    9,    9,    9, 0x08,

       0        // eod
};

static const char qt_meta_stringdata_RBThread[] = {
    "RBThread\0\0readyRead()\0notifyRead()\0"
};

void RBThread::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        Q_ASSERT(staticMetaObject.cast(_o));
        RBThread *_t = static_cast<RBThread *>(_o);
        switch (_id) {
        case 0: _t->readyRead(); break;
        case 1: _t->notifyRead(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObjectExtraData RBThread::staticMetaObjectExtraData = {
    0,  qt_static_metacall 
};

const QMetaObject RBThread::staticMetaObject = {
    { &QThread::staticMetaObject, qt_meta_stringdata_RBThread,
      qt_meta_data_RBThread, &staticMetaObjectExtraData }
};

#ifdef Q_NO_DATA_RELOCATION
const QMetaObject &RBThread::getStaticMetaObject() { return staticMetaObject; }
#endif //Q_NO_DATA_RELOCATION

const QMetaObject *RBThread::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->metaObject : &staticMetaObject;
}

void *RBThread::qt_metacast(const char *_clname)
{
    if (!_clname) return 0;
    if (!strcmp(_clname, qt_meta_stringdata_RBThread))
        return static_cast<void*>(const_cast< RBThread*>(this));
    return QThread::qt_metacast(_clname);
}

int RBThread::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QThread::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 2)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 2;
    }
    return _id;
}

// SIGNAL 0
void RBThread::readyRead()
{
    QMetaObject::activate(this, &staticMetaObject, 0, 0);
}
QT_END_MOC_NAMESPACE
